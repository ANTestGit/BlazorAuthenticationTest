@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorAuthenticationTest</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="user-test">
                <span class="bi" aria-hidden="true"></span> User on client side
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="protected">
                        <span class="bi bi-shield-lock-fill-nav-menu" aria-hidden="true"></span> Protected
                    </NavLink>
                </div>

                @if (!isAuthenticated)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="login">
                            <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Login
                        </NavLink>
                    </div>
                }
                else
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="logout" @onclick="Logout">
                            <span class="bi bi-box-arrow-right-nav-menu" aria-hidden="true"></span> Logout
                        </NavLink>
                    </div>
                }
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
                
            </NotAuthorized>

        </AuthorizeView>
    </nav>
</div>

@code {
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity.IsAuthenticated;
    }

    private async Task Logout()
    {
        await Http.GetAsync("Account/Logout");
        isAuthenticated = false;
        Navigation.NavigateTo("login");
    }
}